[pylithapp]
dump_parameters.filename = output/step02-parameters.json
problem.progress_monitor.filename = output/step02-progress.txt

[pylithapp.problem.formulation]
solver = pylith.problems.SolverNonlinear


[pylithapp.timedependent.formulation.time_step]
total_time = 0*s
dt = 0.1*s


[pylithapp.timedependent]
gravity_field = spatialdata.spatialdb.GravityField
bc = [boundary_west,boundary_east_crust,boundary_bottom_crust,y_pos]


[pylithapp.timedependent.gravity_field]
acceleration = 10.0*m*s**-2
gravity_dir = [0, -1, 0] 


[pylithapp.timedependent.bc]
boundary_east_crust = pylith.bc.Neumann


[pylithapp.timedependent.bc.boundary_east_crust]
label = bndry_east_crust
db_initial = spatialdata.spatialdb.SimpleDB
db_initial.label = Neumann BC on +x
db_initial.iohandler.filename = tractions_axial_shear.spatialdb

output.cell_info_fields = [initial_value]
output.writer.filename = output/step02-traction.vtk
output.cell_filter = pylith.meshio.CellFilterAvg

# We must specify quadrature information for the cell faces.
quadrature.cell = pylith.feassemble.FIATLagrange
quadrature.cell.dimension = 1
quadrature.cell.quad_order = 1


# West boundary
[pylithapp.timedependent.bc.boundary_west]
bc_dof = [0]
label = bndry_west
db_initial.label = Dirichlet BC on west boundary

# Bottom boundary
[pylithapp.timedependent.bc.boundary_bottom_crust]
bc_dof = [1]
label = bndry_bot_slab
db_initial.label = Dirichlet BC on bottom boundary (mantle)


# +y face -- change bc type to Neumann
[pylithapp.timedependent.bc]
y_pos = pylith.bc.Neumann

[pylithapp.timedependent.bc.y_pos]
label = groundsurf

db_change = spatialdata.spatialdb.SimpleDB
db_change.label = Amplitude of Neumann BC on +y
db_change.iohandler.filename = tractions_axial_pressure.spatialdb
# Use linear interpolation
db_change.query_type = linear

th_change = spatialdata.spatialdb.TimeHistory
th_change.label = Time history for Neumann BC on +y
th_change.filename = loadcycle.timedb

output.cell_info_fields = [change_in_value,change_start_time]
output.writer.filename = output/step2-traction.vtk
output.cell_filter = pylith.meshio.CellFilterAvg

# We must specify quadrature information for the cell faces.
quadrature.cell = pylith.feassemble.FIATLagrange
quadrature.cell.dimension = 1
quadrature.cell.quad_order = 1

# ----------------------------------------------------------------------
# faults
# ----------------------------------------------------------------------
[pylithapp.timedependent]
interfaces = [fault_slabtop]

[pylithapp.timedependent.implicit]
solver = pylith.problems.SolverNonlinear

[pylithapp.timedependent.interfaces]
fault_slabtop = pylith.faults.FaultCohesiveDyn


# Fault
[pylithapp.timedependent.interfaces.fault_slabtop]
id = 22
label = fault_slabtop

quadrature.cell = pylith.feassemble.FIATSimplex
quadrature.cell.dimension = 1

# Friction
friction = pylith.friction.SlipWeakening
friction.label = Slip weakening
friction.force_healing = True

friction.db_properties = spatialdata.spatialdb.SimpleGridDB
friction.db_properties.label = Slip weakening
friction.db_properties.filename = fault_slabtop_slipweakening.spatialdb

## Traction
traction_perturbation = pylith.faults.TractPerturbation

[pylithapp.timedependent.interfaces.fault_slabtop.traction_perturbation]
db_initial = spatialdata.spatialdb.SimpleGridDB
db_initial.label = Initial fault tractions
db_initial.filename = fault_slabtop_tractions.spatialdb

db_rate = spatialdata.spatialdb.SimpleGridDB
db_rate.label = Fault traction perturbation rate
db_rate.filename = fault_traction_rate.spatialdb

# Faults
[pylithapp.problem.interfaces.fault_slabtop.output]
writer = pylith.meshio.DataWriterHDF5
writer.filename = output/step02-fault-slabtop.h5
vertex_info_fields = [normal_dir, strike_dir, traction_initial_value, static_coefficient, dynamic_coefficient, slip_weakening_parameter, cohesion]
vertex_data_fields = [slip, slip_rate, traction, cumulative_slip, previous_slip]


# ----------------------------------------------------------------------
# output
# ----------------------------------------------------------------------
# Domain
[pylithapp.problem.formulation.output.domain]
writer.filename = output/step02.h5

# Ground output
[pylithapp.problem.formulation.output.subdomain]
writer.filename = output/step02-groundsurf.h5


# Materials
[pylithapp.timedependent.materials.continent_crust.output]
writer.filename = output/step02-concrust.h5

[pylithapp.timedependent.materials.ocean_crust.output]
writer.filename = output/step02-oceancrust.h5

[pylithapp.timedependent.interfaces.fault_slabtop]
# Zero tolerance for locking fault (no slip). Must be larger than ksp tolerance.
zero_tolerance = 1.0e-8

[pylithapp.petsc]
malloc_dump =

friction_pc_type = asm
friction_sub_pc_factor_shift_type = nonzero
friction_ksp_max_it = 25
friction_ksp_gmres_restart = 30
friction_ksp_error_if_not_converged = true

# End of file
